[{"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/index.js":"1","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/App.tsx":"2","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/contexts/ThemeContext.js":"3","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/TaskContext.js":"4","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/index.js":"5","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/index.js":"6","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/index.js":"7","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/index.js":"8","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/Footer.js":"9","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/Header.js":"10","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/AddTaskForm.js":"11","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/Tasks.js":"12","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/index.js":"13","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/index.js":"14","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/index.js":"15","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/index.js":"16","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/index.js":"17","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/index.js":"18","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/MainTitle.js":"19","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/TaskList.js":"20","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/TasksMenu.js":"21","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/ExternalLink.js":"22","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/LightDarkMode.js":"23","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/Input.js":"24","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/index.js":"25","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/TasksFilters.js":"26","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/index.js":"27","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/TaskFilter.js":"28"},{"size":442,"mtime":1611564231000,"results":"29","hashOfConfig":"30"},{"size":809,"mtime":1611583683000,"results":"31","hashOfConfig":"30"},{"size":1260,"mtime":1611309256000,"results":"32","hashOfConfig":"30"},{"size":4310,"mtime":1611570893000,"results":"33","hashOfConfig":"30"},{"size":54,"mtime":1610364154000,"results":"34","hashOfConfig":"30"},{"size":54,"mtime":1610362483000,"results":"35","hashOfConfig":"30"},{"size":69,"mtime":1610367950000,"results":"36","hashOfConfig":"30"},{"size":50,"mtime":1611315972000,"results":"37","hashOfConfig":"30"},{"size":1060,"mtime":1611316916000,"results":"38","hashOfConfig":"30"},{"size":511,"mtime":1611316941000,"results":"39","hashOfConfig":"30"},{"size":1164,"mtime":1611395893000,"results":"40","hashOfConfig":"30"},{"size":273,"mtime":1611315996000,"results":"41","hashOfConfig":"30"},{"size":63,"mtime":1611314534000,"results":"42","hashOfConfig":"30"},{"size":60,"mtime":1610374781000,"results":"43","hashOfConfig":"30"},{"size":63,"mtime":1611315513000,"results":"44","hashOfConfig":"30"},{"size":75,"mtime":1610362961000,"results":"45","hashOfConfig":"30"},{"size":72,"mtime":1610364296000,"results":"46","hashOfConfig":"30"},{"size":51,"mtime":1610368276000,"results":"47","hashOfConfig":"30"},{"size":299,"mtime":1611314568000,"results":"48","hashOfConfig":"30"},{"size":2454,"mtime":1611572271000,"results":"49","hashOfConfig":"30"},{"size":786,"mtime":1611574896000,"results":"50","hashOfConfig":"30"},{"size":452,"mtime":1610365613000,"results":"51","hashOfConfig":"30"},{"size":896,"mtime":1611316349000,"results":"52","hashOfConfig":"30"},{"size":622,"mtime":1611314438000,"results":"53","hashOfConfig":"30"},{"size":72,"mtime":1611314976000,"results":"54","hashOfConfig":"30"},{"size":1301,"mtime":1611317340000,"results":"55","hashOfConfig":"30"},{"size":65,"mtime":1611314760000,"results":"56","hashOfConfig":"30"},{"size":488,"mtime":1611314822000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"rydb8e",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/index.js",[],["121","122"],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/App.tsx",[],["123","124"],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/contexts/ThemeContext.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/TaskContext.js",["125","126","127","128"],"import React, { createContext, useState} from 'react';\nexport const TaskContext = createContext();\n\nconst TasksProvider = props => {\n  const getInitialState = () => {\n    const tasks = JSON.parse(localStorage.getItem('tasks') || '[]');\n    return tasks;\n  };\n\n  const [tasks, setTasks] = useState(getInitialState());\n  const [filter, setFilter] = useState('all');\nconsole.log('tasks: ', tasks)\n  const saveTasksLocalstorage = tasks => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  \n  const addTaskToList = task => {\n    if(task !== \"\") {\n      const newTasks = [...tasks, { text : task, active: true, completed: false, checked: false, id: new Date().getTime() }];\n      setTasks(newTasks)\n      saveTasksLocalstorage(newTasks)\n    }\n  }\n\n  const changeStatusTask = (task) => {\n    // encontramos la posición de la tarea en el array\n    const indexTask = tasks.findIndex(t => t.id === task.id );\n    // esto no es una copia del array original es una referencia\n    // const newTasks = tasks;\n\n    // creamops la copia real del array\n    const newTasks = [...tasks];\n\n    // Modificamos la tarea concreta\n    newTasks[indexTask]['active'] = !newTasks[indexTask]['active'];\n    newTasks[indexTask]['completed'] = !newTasks[indexTask]['completed'];\n    newTasks[indexTask]['checked'] = !newTasks[indexTask]['checked'];\n    \n    // seteamos el nuevo array\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  /* Problema de esta solucion, que mutamos el array original */\n  /* pero mejora rendimiento al no hacer un bucle */\n  const changeStatusTask__refactor3 = (task) => {\n    const indexTask = tasks.findIndex(t => t.id === task.id );\n\n    tasks[indexTask]['active'] = !tasks[indexTask]['active'];\n    tasks[indexTask]['completed'] = !tasks[indexTask]['completed'];\n    \n    setTasks(tasks);\n    saveTasksLocalstorage(tasks);\n  }\n\n  /* problema de esta solucion ? */\n  /* tienes que recorrer todo el array para modificar un elemento., si tengo 1000 elemenotos.... */\n  /* lento */ \n  const changeStatusTask_refactor2 = (task) => {\n    const newTasks = tasks.map( t => {\n      if(t.id === task.id) {\n        t.active = !t.active;\n        t.completed = !t.completed;\n      }\n      return t;\n    })\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  const changeStatusTask_refactor_1 = (task, status) => {\n    const newTasks = tasks.map( t => {\n      if(t.id === task.id) {\n        if(status === true) {\n          t.active = false;\n          t.completed = true;\n        } else {\n          t.active = true;\n          t.completed = false;\n        }\n      }\n      return t;\n    })\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  const changeStatusTask3 = (task, status) => {\n    const newTasks = tasks.map( t => {\n      if(t.id === task.id) {\n        let completedTask = {}\n        if(status === true) {\n          completedTask = { text : task.text, active: false, completed: true, id: task.id};\n          return completedTask\n        }\n        return completedTask = { text : task.text, active: true, completed: false, id: task.id};\n      }\n      return t;\n    })\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  const clearCompletedTasks = () => {\n    const newTasks = tasks.filter(\n      task => task.completed === false\n    )\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  const filterChange = (filter) => {\n    setFilter(filter)\n  }\n\n  const getTasksFiltered = () => {\n    let tasksFiltered = tasks;\n    if (filter === 'active') {\n      tasksFiltered = tasks.filter( task => task.active );\n    } else if (filter === 'completed') {\n      tasksFiltered = tasks.filter( task => task.completed );\n    }\n\n    return tasksFiltered\n  }\n\n  const deleteTask = taskToDelete => {\n    console.log('taskToDelete: ', taskToDelete)\n    const newTasks = tasks.filter(\n      task => task.id !== taskToDelete.id\n    );\n    setTasks(newTasks);\n    saveTasksLocalstorage(newTasks);\n  }\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks,\n        filter,\n        getTasksFiltered,\n        addTaskToList,\n        changeStatusTask,\n        clearCompletedTasks,\n        filterChange,\n        deleteTask\n      }}\n    >\n      {props.children}\n    </TaskContext.Provider>\n  );\n};\n\nexport default TasksProvider;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/Footer.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/Header.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/AddTaskForm.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/Tasks.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/MainTitle.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/TaskList.js",["129","130"],"import React, {useContext, useState, useEffect} from 'react';\nimport { TaskContext } from '../../contexts/TaskContext';\nimport './TaskList.css';\nimport iconClose from '../../../../assets/images/icon-cross.svg';\n\nconst TaskList = () => {\n  const [isShown, setIsShown] = useState(false);\n  const [taskHover, setTaskHover] = useState();\n  const [width, setWidth] = useState();\n  const { getTasksFiltered, changeStatusTask, deleteTask } = useContext(TaskContext);\n  const tasks = getTasksFiltered();\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\n  }, []);\n  \n  const handleChangeToCompletedTask = (task) => {\n    console.log('task: ', task)\n    changeStatusTask(task);\n  }\n  \n  const handleDeleteTask = (task) => {\n    deleteTask(task);\n  }\n  \n  const handleOnMouseEnter = task => {\n    setTaskHover(task)\n    setIsShown(true)\n  }\n\n  return (\n    <form className=\"TaskList\">\n      {tasks.map(task => {\n        return (\n          <div key={task.id}\n            onMouseEnter={() => handleOnMouseEnter(task)}\n            onMouseLeave={() => setIsShown(false)}\n          >\n            <div>\n              <input \n                type=\"checkbox\" \n                id={task.id} \n                checked={task.checked ? \"checked\" : \"\"}\n                onChange={() => {\n                  handleChangeToCompletedTask(task)\n                }}\n              />\n              <label \n                htmlFor={task.id}\n                className = {task.completed ? \"active\" : \"\"}\n              >\n                {task.text}\n              </label>\n            </div>\n            <div>\n              {taskHover === task && isShown && (\n                <a \n                  href=\"#\" \n                  className=\"TaskList__buttonDelete\"\n                  onClick={() => {\n                    handleDeleteTask(task);\n                  }}\n                >\n                  <img src={iconClose} alt=\"Icono cerrar\" />\n                </a>\n              )}\n              {width <= 768 && (\n                <a \n                href=\"#\" \n                className=\"TaskList__buttonDelete\"\n                onClick={() => {\n                  handleDeleteTask(task);\n                }}\n              >\n                <img src={iconClose} alt=\"Icono cerrar\" />\n              </a>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </form>\n  );\n};\n\nexport default TaskList;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/TasksMenu.js",["131"],"import React, {useContext} from 'react';\nimport TasksFilters from '../TasksFilters';\nimport { TaskContext } from '../../contexts/TaskContext';\nimport './TasksMenu.css';\n\nconst TasksMenu = () => {\n  const { getTasksFiltered, clearCompletedTasks } = useContext(TaskContext);\n\n  const tasks = getTasksFiltered();\n\n  const handleClearCompleted = () => {\n    clearCompletedTasks();\n  }\n\n  return (\n    <>\n    <aside className=\"TasksMenu\">\n      <p>{tasks.length} items</p>\n      <TasksFilters />\n\n      <a \n        href=\"#\" \n        className=\"TasksMenu__ClearCompleted\"\n        onClick={handleClearCompleted}  \n      >\n        Clear Completed\n      </a>\n    </aside>\n\n    <aside className=\"TasksResponsiveMenu\">\n      <TasksFilters />\n    </aside>\n    </>\n  );\n};\n\nexport default TasksMenu;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/ExternalLink.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/LightDarkMode.js",["132"],"import React, {useContext} from 'react';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport './LightDarkMode.css';\nimport iconMoon from '../../assets/images/icon-moon.svg';\nimport iconSun from '../../assets/images/icon-sun.svg';\n\nfunction LightDarkMode() {\n  const { colorSchema, setColorSchema, changeTheme } = useContext(ThemeContext);\n  //console.log('colorSchema in Component', colorSchema)\n\n  const handleOnClick = () => {\n    if(colorSchema === \"light\") {\n      setColorSchema(\"dark\");\n    } else {\n      setColorSchema(\"light\");\n    }\n    changeTheme();\n  }\n  return (\n    <a href=\"#\" className=\"LightDarkMode\" onClick={handleOnClick}>\n      <figure>\n        {colorSchema === \"light\" ? (\n          <img src={iconMoon} alt=\"Icono luna\" />\n        ) : (\n          <img src={iconSun} alt=\"Icono sol\" />\n        )}\n      </figure>\n    </a>\n  ) \n}\nexport default LightDarkMode;\n","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/Input.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/TasksFilters.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/index.js",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/TaskFilter.js",["133"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskFilter.css';\nfunction TaskFilter({ text, onChange , isActive }) {\n  const handleClick = () => {\n    onChange(text);\n  }\n  return  isActive ? (\n    <strong className={isActive ? \"actived\" : \"\"}>\n      {text}\n    </strong>\n    \n  ): (\n    <a href=\"#\" onClick={handleClick}  >\n      {text}\n    </a>\n  );\n}\n\nexport default TaskFilter;\n\nTaskFilter.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n};",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":46,"column":9,"nodeType":"140","messageId":"141","endLine":46,"endColumn":36},{"ruleId":"138","severity":1,"message":"142","line":59,"column":9,"nodeType":"140","messageId":"141","endLine":59,"endColumn":35},{"ruleId":"138","severity":1,"message":"143","line":71,"column":9,"nodeType":"140","messageId":"141","endLine":71,"endColumn":36},{"ruleId":"138","severity":1,"message":"144","line":88,"column":9,"nodeType":"140","messageId":"141","endLine":88,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":58,"column":17,"nodeType":"147","endLine":64,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":69,"column":17,"nodeType":"147","endLine":75,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":21,"column":7,"nodeType":"147","endLine":25,"endColumn":8},{"ruleId":"145","severity":1,"message":"146","line":20,"column":5,"nodeType":"147","endLine":20,"endColumn":67},{"ruleId":"145","severity":1,"message":"146","line":14,"column":5,"nodeType":"147","endLine":14,"endColumn":41},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'changeStatusTask__refactor3' is assigned a value but never used.","Identifier","unusedVar","'changeStatusTask_refactor2' is assigned a value but never used.","'changeStatusTask_refactor_1' is assigned a value but never used.","'changeStatusTask3' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]