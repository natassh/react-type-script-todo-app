[{"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/App.tsx":"1","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/index.ts":"2","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/Footer.tsx":"3","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/index.tsx":"4","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/index.ts":"5","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/Header.tsx":"6","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/index.ts":"7","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/AddTaskForm.tsx":"8","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/index.ts":"9","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/Tasks.tsx":"10","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/index.ts":"11","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/TaskFilter.tsx":"12","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/index.ts":"13","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/TaskList.tsx":"14","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/index.ts":"15","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/ExternalLink.tsx":"16","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/index.ts":"17","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/Input.tsx":"18","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/index.ts":"19","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/LightDarkMode.tsx":"20","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/index.ts":"21","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/MainTitle.tsx":"22","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/index.ts":"23","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/TasksFilters.tsx":"24","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/index.ts":"25","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/TasksMenu.tsx":"26","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/TaskContext.tsx":"27","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/contexts/ThemeContext.tsx":"28","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/deleteTaskAction.ts":"29","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/addTaskToListAction.ts":"30","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/clearCompletedTasksAction.ts":"31"},{"size":732,"mtime":1611682950000,"results":"32","hashOfConfig":"33"},{"size":55,"mtime":1611586630000,"results":"34","hashOfConfig":"33"},{"size":1060,"mtime":1611652787000,"results":"35","hashOfConfig":"33"},{"size":437,"mtime":1611586604000,"results":"36","hashOfConfig":"33"},{"size":54,"mtime":1611654537000,"results":"37","hashOfConfig":"33"},{"size":417,"mtime":1611654735000,"results":"38","hashOfConfig":"33"},{"size":69,"mtime":1611656285000,"results":"39","hashOfConfig":"33"},{"size":995,"mtime":1611666701000,"results":"40","hashOfConfig":"33"},{"size":50,"mtime":1611659680000,"results":"41","hashOfConfig":"33"},{"size":273,"mtime":1611666767000,"results":"42","hashOfConfig":"33"},{"size":65,"mtime":1611659846000,"results":"43","hashOfConfig":"33"},{"size":505,"mtime":1611837949000,"results":"44","hashOfConfig":"33"},{"size":60,"mtime":1611661561000,"results":"45","hashOfConfig":"33"},{"size":2520,"mtime":1612082031000,"results":"46","hashOfConfig":"33"},{"size":72,"mtime":1611668926000,"results":"47","hashOfConfig":"33"},{"size":418,"mtime":1611669225000,"results":"48","hashOfConfig":"33"},{"size":51,"mtime":1611669246000,"results":"49","hashOfConfig":"33"},{"size":618,"mtime":1611669354000,"results":"50","hashOfConfig":"33"},{"size":75,"mtime":1611669420000,"results":"51","hashOfConfig":"33"},{"size":798,"mtime":1611824245000,"results":"52","hashOfConfig":"33"},{"size":63,"mtime":1611669558000,"results":"53","hashOfConfig":"33"},{"size":284,"mtime":1611669627000,"results":"54","hashOfConfig":"33"},{"size":72,"mtime":1611669771000,"results":"55","hashOfConfig":"33"},{"size":796,"mtime":1611824331000,"results":"56","hashOfConfig":"33"},{"size":63,"mtime":1611670175000,"results":"57","hashOfConfig":"33"},{"size":911,"mtime":1611910753000,"results":"58","hashOfConfig":"33"},{"size":3250,"mtime":1612268033000,"results":"59","hashOfConfig":"33"},{"size":1849,"mtime":1612088904000,"results":"60","hashOfConfig":"33"},{"size":252,"mtime":1612264850000,"results":"61","hashOfConfig":"33"},{"size":287,"mtime":1612265464000,"results":"62","hashOfConfig":"33"},{"size":238,"mtime":1612268093000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rydb8e",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/App.tsx",[],["132","133"],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Footer/Footer.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/index.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/Header/Header.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/AddTaskForm/AddTaskForm.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/Tasks/Tasks.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskFilter/TaskFilter.tsx",["134"],"import React from 'react';\nimport './TaskFilter.css';\n\nconst TaskFilter: React.FC<TaskFilterProps> = ({ text, onChange , isActive }) => {\n\n  const handleClick = () => {\n    onChange(text);\n  }\n  return  isActive ? (\n    <strong className={isActive ? \"actived\" : \"\"}>\n      {text}\n    </strong>\n    \n  ): (\n    <a href=\"#\" onClick={handleClick}  >\n      {text}\n    </a>\n  );\n}\n\nexport default TaskFilter;\n\ntype TaskFilterProps = {\n  text: string,\n  isActive: boolean,\n  onChange: (value: string) => void\n}\n","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TaskList/TaskList.tsx",["135","136"],"import React, {useContext, useState, useEffect} from 'react';\nimport { TaskContext, Task } from '../../contexts/TaskContext';\nimport './TaskList.css';\nimport iconClose from '../../../../assets/images/icon-cross.svg';\n\nconst TaskList: React.FC<{}> = () => {\n  const [isShown, setIsShown] = useState(false);\n  const [taskHover, setTaskHover] = useState<Task>();\n  const [width, setWidth] = useState<number>(0);\n  const { getTasksFiltered, changeStatusTask, deleteTask } = useContext(TaskContext);\n  const tasks = getTasksFiltered();\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\n  }, []);\n  \n  const handleChangeToCompletedTask = (task: Task) => {\n    changeStatusTask(task);\n  }\n  \n  const handleDeleteTask = (task: Task) => {\n    deleteTask(task);\n  }\n  \n  const handleOnMouseEnter = (task: Task) => {\n    setTaskHover(task)\n    setIsShown(true)\n  }\n\n  return (\n    <form className=\"TaskList\">\n      {tasks.map((task: Task)   => {\n        const idElement = task.id.toString();\n        return (\n          <div key={task.id}\n            onMouseEnter={() => handleOnMouseEnter(task)}\n            onMouseLeave={() => setIsShown(false)}\n          >\n            <div>\n              <input \n                type=\"checkbox\" \n                id={idElement} \n                checked={task.checked}\n                onChange={() => {\n                  handleChangeToCompletedTask(task)\n                }}\n              />\n              <label \n                htmlFor={idElement}\n                className = {task.completed ? \"active\" : \"\"}\n              >\n                {task.text}\n              </label>\n            </div>\n            <div>\n              {taskHover === task && isShown && (\n                <a \n                  href=\"#\" \n                  className=\"TaskList__buttonDelete\"\n                  onClick={() => {\n                    handleDeleteTask(task);\n                  }}\n                >\n                  <img src={iconClose} alt=\"Icono cerrar\" />\n                </a>\n              )}\n              {width <= 768 && (\n                <a \n                href=\"#\" \n                className=\"TaskList__buttonDelete\"\n                onClick={() => {\n                  handleDeleteTask(task);\n                }}\n              >\n                <img src={iconClose} alt=\"Icono cerrar\" />\n              </a>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </form>\n  );\n};\n\nexport default TaskList;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/ExternalLink/ExternalLink.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/Input/Input.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/components/LightDarkMode/LightDarkMode.tsx",["137"],"import React, {useContext} from 'react';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport './LightDarkMode.css';\nimport iconMoon from '../../assets/images/icon-moon.svg';\nimport iconSun from '../../assets/images/icon-sun.svg';\n\nfunction LightDarkMode() {\n  const { colorSchema, changeTheme } = useContext(ThemeContext);\n\n  const handleOnClick = () => {\n    if(colorSchema === \"light\") {\n      changeTheme(\"dark\");\n    } else {\n      changeTheme(\"light\");\n    }\n  }\n  return (\n    <a href=\"#\" className=\"LightDarkMode\" onClick={handleOnClick}>\n      <figure>\n        {colorSchema === \"light\" ? (\n          <img src={iconMoon} alt=\"Icono luna\" />\n        ) : (\n          <img src={iconSun} alt=\"Icono sol\" />\n        )}\n      </figure>\n    </a>\n  ) \n}\nexport default LightDarkMode;\n","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/App/components/MainTitle/MainTitle.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksFilters/TasksFilters.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/index.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/components/TasksMenu/TasksMenu.tsx",["138"],"import React, {useContext} from 'react';\nimport TasksFilters from '../TasksFilters';\nimport { TaskContext } from '../../contexts/TaskContext';\nimport './TasksMenu.css';\n\nconst TasksMenu = () => {\n  const { getTasksFiltered, clearCompletedTasks } = useContext(TaskContext);\n\n  const tasks = getTasksFiltered();\n\n  const handleClearCompleted = () => {\n    clearCompletedTasks();\n  }\n\n  return (\n    <>\n    <nav className=\"TasksMenu\">\n      <ul>\n        <li>\n          {tasks.length} items\n        </li>\n        <li>\n          <TasksFilters />\n        </li>\n        <li>\n          <a \n            href=\"#\" \n            className=\"TasksMenu__ClearCompleted\"\n            onClick={handleClearCompleted}  \n          >\n            Clear Completed\n          </a>\n        </li>\n      </ul>\n\n    </nav>\n\n    <nav className=\"TasksResponsiveMenu\">\n      <TasksFilters />\n    </nav>\n    </>\n  );\n};\n\nexport default TasksMenu;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/TaskContext.tsx",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/contexts/ThemeContext.tsx",["139"],"import React, { createContext, useState } from 'react';\n\ntype ThemeContextProps = {\n  colorSchema: string\n  changeTheme: (theme: string) =>  void,\n}\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps>(undefined!);\n\nconst getInitialState = (): string => {\n  const userPrefersDark: boolean = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const userPrefersLight: boolean = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\n\n  if(userPrefersDark){\n    return \"dark\"\n  } else if(userPrefersLight) {\n    return \"light\"\n  }\n  return \"light\"\n};\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [colorSchema, setColorSchema] = useState<string>(getInitialState())\n\n  const defaultTheme = 'dark';\n\n  React.useEffect(() => { \n    changeTheme(colorSchema)\n    const preferDarkQuery: string = `(prefers-color-scheme: ${defaultTheme})`\n    const mediaQuery = window.matchMedia(preferDarkQuery)\n    const handleChange = () => {\n      setColorSchema(mediaQuery.matches ? 'dark' : 'light')\n      changeTheme(mediaQuery.matches ? 'dark' : 'light')\n    }\n    mediaQuery.addEventListener('change', handleChange)\n    return () => mediaQuery.removeEventListener('change', handleChange)\n  }, [])\n \n  const changeTheme = (theme: string) => {\n    const body = document.body;\n    if(theme === \"dark\") {\n      body.classList.remove(\"lighted\")\n      body.classList.add(\"darked\");\n     \n    }\n    else {\n      body.classList.remove(\"darked\")\n      body.classList.add(\"lighted\");\n    }\n    setColorSchema(theme);\n  }\n  return (\n    <ThemeContext.Provider\n      value={{\n        colorSchema,\n        changeTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;","/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/deleteTaskAction.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/addTaskToListAction.ts",[],"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/todo-app/type-script-app/src/ui/modules/tasks/contexts/utils/clearCompletedTasksAction.ts",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":15,"column":5,"nodeType":"146","endLine":15,"endColumn":41},{"ruleId":"144","severity":1,"message":"145","line":58,"column":17,"nodeType":"146","endLine":64,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":69,"column":17,"nodeType":"146","endLine":75,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":18,"column":5,"nodeType":"146","endLine":18,"endColumn":67},{"ruleId":"144","severity":1,"message":"145","line":26,"column":11,"nodeType":"146","endLine":30,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":41,"column":6,"nodeType":"149","endLine":41,"endColumn":8,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'colorSchema'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [colorSchema]",{"range":"156","text":"157"},[1337,1339],"[colorSchema]"]